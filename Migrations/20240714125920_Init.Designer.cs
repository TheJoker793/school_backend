// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School_Backend.Models;

#nullable disable

namespace Backend_School.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20240714125920_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("School_Backend.Models.AnneeScolaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("StudentId");

                    b.ToTable("AnneeScolaires");
                });

            modelBuilder.Entity("School_Backend.Models.Assiduite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConditionTenir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAssiduite")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("DateDebut")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("DateFin")
                        .HasColumnType("time");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Assiduites");
                });

            modelBuilder.Entity("School_Backend.Models.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NiveauId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NiveauId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("School_Backend.Models.Controle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateControle")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("Duree")
                        .HasColumnType("time");

                    b.Property<string>("Liblle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Controles");
                });

            modelBuilder.Entity("School_Backend.Models.Diplome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateObtenir")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ecole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfesseurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfesseurId");

                    b.ToTable("Diplomes");
                });

            modelBuilder.Entity("School_Backend.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatiereId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("School_Backend.Models.DisciplineNiveau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("NiveauId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("NiveauId");

                    b.ToTable("DisciplineNiveaux");
                });

            modelBuilder.Entity("School_Backend.Models.Emploi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.Property<int>("DiSciplineId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("HeureDebut")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("HeureFin")
                        .HasColumnType("time");

                    b.Property<int>("ProfesseurId")
                        .HasColumnType("int");

                    b.Property<int>("SalleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("DiSciplineId");

                    b.HasIndex("ProfesseurId");

                    b.HasIndex("SalleId");

                    b.ToTable("Emplois");
                });

            modelBuilder.Entity("School_Backend.Models.Frais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Frais1")
                        .HasColumnType("float");

                    b.Property<double>("Frais2")
                        .HasColumnType("float");

                    b.Property<double>("Frais3")
                        .HasColumnType("float");

                    b.Property<int>("NiveauId")
                        .HasColumnType("int");

                    b.Property<int>("ReglementId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NiveauId");

                    b.HasIndex("ReglementId");

                    b.ToTable("Fraiss");
                });

            modelBuilder.Entity("School_Backend.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Matieres");
                });

            modelBuilder.Entity("School_Backend.Models.Niveau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Niveaux");
                });

            modelBuilder.Entity("School_Backend.Models.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeParently")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("School_Backend.Models.ParentStudent", b =>
                {
                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ParentId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ParentsStudents");
                });

            modelBuilder.Entity("School_Backend.Models.PreviousSchool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreviousSchools");
                });

            modelBuilder.Entity("School_Backend.Models.Professeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professeurs");
                });

            modelBuilder.Entity("School_Backend.Models.Reglement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReglement")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModePaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoisRegler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Montant")
                        .HasColumnType("real");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Reglements");
                });

            modelBuilder.Entity("School_Backend.Models.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salles");
                });

            modelBuilder.Entity("School_Backend.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreviousSchoolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PreviousSchoolId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("School_Backend.Models.StudentControle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ControleId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ControleId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentControles");
                });

            modelBuilder.Entity("School_Backend.Models.AnneeScolaire", b =>
                {
                    b.HasOne("School_Backend.Models.Classe", "Classe")
                        .WithMany("AnneeScolaires")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Student", "Student")
                        .WithMany("AnneeScolaires")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School_Backend.Models.Assiduite", b =>
                {
                    b.HasOne("School_Backend.Models.Student", "Student")
                        .WithMany("Assiduites")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School_Backend.Models.Classe", b =>
                {
                    b.HasOne("School_Backend.Models.Niveau", "Niveau")
                        .WithMany("Classes")
                        .HasForeignKey("NiveauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Niveau");
                });

            modelBuilder.Entity("School_Backend.Models.Diplome", b =>
                {
                    b.HasOne("School_Backend.Models.Professeur", "Professeur")
                        .WithMany("Diplomes")
                        .HasForeignKey("ProfesseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("School_Backend.Models.Discipline", b =>
                {
                    b.HasOne("School_Backend.Models.Matiere", "Matiere")
                        .WithMany("Disciplines")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("School_Backend.Models.DisciplineNiveau", b =>
                {
                    b.HasOne("School_Backend.Models.Discipline", "Discipline")
                        .WithMany("DisciplineNiveaux")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Niveau", "Niveau")
                        .WithMany("DisciplineNiveaux")
                        .HasForeignKey("NiveauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Niveau");
                });

            modelBuilder.Entity("School_Backend.Models.Emploi", b =>
                {
                    b.HasOne("School_Backend.Models.Classe", "Classe")
                        .WithMany("Emplois")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Discipline", "Discipline")
                        .WithMany("Emplois")
                        .HasForeignKey("DiSciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Professeur", "Professeur")
                        .WithMany("Emplois")
                        .HasForeignKey("ProfesseurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Salle", "Salle")
                        .WithMany("Emplois")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Discipline");

                    b.Navigation("Professeur");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("School_Backend.Models.Frais", b =>
                {
                    b.HasOne("School_Backend.Models.Niveau", "Niveau")
                        .WithMany("Fraiss")
                        .HasForeignKey("NiveauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Reglement", "Reglement")
                        .WithMany("Fraiss")
                        .HasForeignKey("ReglementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Niveau");

                    b.Navigation("Reglement");
                });

            modelBuilder.Entity("School_Backend.Models.ParentStudent", b =>
                {
                    b.HasOne("School_Backend.Models.Parent", "Parent")
                        .WithMany("ParentsStudents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Student", "Student")
                        .WithMany("ParentsStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School_Backend.Models.Reglement", b =>
                {
                    b.HasOne("School_Backend.Models.Student", "Student")
                        .WithMany("Reglements")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School_Backend.Models.Student", b =>
                {
                    b.HasOne("School_Backend.Models.PreviousSchool", "PreviousSchool")
                        .WithMany("Students")
                        .HasForeignKey("PreviousSchoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreviousSchool");
                });

            modelBuilder.Entity("School_Backend.Models.StudentControle", b =>
                {
                    b.HasOne("School_Backend.Models.Controle", "Controle")
                        .WithMany("StudentControles")
                        .HasForeignKey("ControleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("School_Backend.Models.Student", "Student")
                        .WithMany("StudentControles")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Controle");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("School_Backend.Models.Classe", b =>
                {
                    b.Navigation("AnneeScolaires");

                    b.Navigation("Emplois");
                });

            modelBuilder.Entity("School_Backend.Models.Controle", b =>
                {
                    b.Navigation("StudentControles");
                });

            modelBuilder.Entity("School_Backend.Models.Discipline", b =>
                {
                    b.Navigation("DisciplineNiveaux");

                    b.Navigation("Emplois");
                });

            modelBuilder.Entity("School_Backend.Models.Matiere", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("School_Backend.Models.Niveau", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("DisciplineNiveaux");

                    b.Navigation("Fraiss");
                });

            modelBuilder.Entity("School_Backend.Models.Parent", b =>
                {
                    b.Navigation("ParentsStudents");
                });

            modelBuilder.Entity("School_Backend.Models.PreviousSchool", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("School_Backend.Models.Professeur", b =>
                {
                    b.Navigation("Diplomes");

                    b.Navigation("Emplois");
                });

            modelBuilder.Entity("School_Backend.Models.Reglement", b =>
                {
                    b.Navigation("Fraiss");
                });

            modelBuilder.Entity("School_Backend.Models.Salle", b =>
                {
                    b.Navigation("Emplois");
                });

            modelBuilder.Entity("School_Backend.Models.Student", b =>
                {
                    b.Navigation("AnneeScolaires");

                    b.Navigation("Assiduites");

                    b.Navigation("ParentsStudents");

                    b.Navigation("Reglements");

                    b.Navigation("StudentControles");
                });
#pragma warning restore 612, 618
        }
    }
}
